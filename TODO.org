* Convenience
** DONE Write a replace-sheep function
  it should swap a sheep's properties/contents with a new 'definition',
  while maintaining identity.
** DONE Wrap replace-sheep with a DEFSHEEP macro.
* Documentation
** TODO Allow individual message documentation
** TODO Complete documentation with tutorial and user's guide
** TODO Make sure user's guide and documentation is good, then make it better

* Performance
** DONE Optimize the shit out of property-access
  Done for now -- it's only slightly slower than PCL right now
** TODO Optimize the shit out of message dispatch
   It's pretty fast right now, but nothing compared to PCL.
   I should read through the Slate paper again and see if I can implement any of their
   suggested optimizations.
   Additionally, I found a paper that talks about how PCL's caching works. I think I can
   implement something similar in sheeple, which would then make message dispatch absurdly fast.
* More features
** TODO Implement :message option for defbuzzword (like CLOS' :method option)

** DONE Make initialize-instance a buzzword so :after messages can be defined
   both initialize-instance and reinitialize-instance are regular buzzwords now.
** DONE Have buzzwords accept &keywords in lambda lists, and maintain congruence as per CLOS
* Stability
** TODO Write unit tests for defsheep
** TODO Write unit tests for new LL stuff
** TODO Work out the whole conditions thing, and what they print out. 
   Put them all in conditions.lisp?
** TODO Write plenty more unit tests.
   I need to write unit-tests for the defsheep stuff, at least.
** TODO Thoroughly test sheeple, make sure everything's stable






