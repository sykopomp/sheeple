\input texinfo @c -*- texinfo -*-
@c %**start of header
@setfilename sheeple.info
@settitle Sheeple v3.0 Manual
@firstparagraphindent insert
@c %**end of header

@copying
This manual is for Sheeple v3.0

Copyright @copyright{} 2008, 2009 Kat Marchan.

This software is composed in part of code taken from SBCL's version of
PCL, and Closette as presented in Art of the Metaobject Protocol, at
times with only small modifications. It also contains some original
code. Copying and distribution of this software must retain the
copyright notice for Xerox, as well as Kat Marchan's:

@quotation
Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
@end quotation

Xerox's copyright, from original PCL sources:

@quotation
Copyright @copyright{} 1985, 1986, 1987, 1988, 1989, 1990 Xerox
Corporation.  All rights reserved.

Use and copying of this software and preparation of derivative works
based upon this software are permitted. Any distribution of this
software or derivative works must comply with all applicable United
States export control laws.

This software is made available AS IS, and Xerox Corporation makes no
warranty about the software, its performance or its conformity to any
specification.
@end quotation

Additionally, Sheeple uses Luis Oliveira's trivial-garbage for
portability across implementations. trivial-garbage is in the public
domain, thus although the statement packaged with it is included here,
copies and derivatives of Sheeple need not include it:

@quotation
This software is placed in the public domain by Luis Oliveira
<loliveira@@common-lisp.net> and is provided with absolutely no
warranty.
@end quotation
@end copying

@titlepage
@title Sheeple Manual
@subtitle This manual covers Sheeple v3.0
@author by Adlai Chandrasekhar and Kat Marchan
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents

@ifnottex

@node Top, General Information, (dir), (dir)
@top Sheeple Manual

This manual is for Sheeple v3.0
@end ifnottex

@menu
* General Information::         Overview of Sheeple
* Concept Index::               Index
* Copying::                     Your rights and freedoms
@end menu
@node General Information, Concept Index, Top, Top
@chapter General Information

@menu
* About Sheeple::               A Non-Technical Overview
* Installing Sheeple::          A Slightly Technical Guide
@end menu

@node About Sheeple, Installing Sheeple, General Information, General Information
@section About Sheeple
@cindex Sheeple, general overview of

@menu
* Vision::                      The Grand Plan for Sheeple
* History::                     What Inspired Sheeple? What Influenced Sheeple?
@end menu

@node Vision, History, About Sheeple, About Sheeple
@subsection Vision
@cindex Vision
Sheeple is a Dynamic, CLOS-like, Delegative Prototype-based
Object-Oriented Programming Framework (or "POOP Framework") that
strives to optimize application flexibility, minimize cost while
increasing value, maximize programmer resources, and empower
application implementers to better assist them in leveraging modern
paradigms in order to proactively achieve next-generation synergy in
tomorrow's web 3.0 world. It is implemented in (mostly) ANSI Common
Lisp. Sheeple is fully buzzword compliant.

@node History,  , Vision, About Sheeple
@subsection History
@cindex history, of Sheeple
Sheeple was originally written as a persistent library for use with
Sykosomatic. Because of a desire to use it in other applications, it
was rewritten as a regular prototype object system and provided as a
standalone library meant for general-purpose OO hackery.

Persistent Sheeple has not been abandoned, instead, it's being
implemented as a separate library using Sheeple's reflection features.

Sheeple is inspired by a number of Object-Oriented systems, mainly:
@enumerate
@item
CLOS, the Common Lisp Object System.
@cindex CLOS

@item
Slate, a Smalltalk-like language with Prototype Multiple Dispatch that
  Sheeple bases its message dispatch system on.
@cindex Slate
@cindex Smalltalk
@cindex PMD
@cindex

@item
Self, another Smalltalk-like language with lots of papers written about
  it, and the concept of prototype OO.

@item
Io, a pure prototype-based language. Sheeple, like Io, implements
  differential inheritance.
@end enumerate

It was written with the purpose of providing a lot of the goodies of
CLOS programming in a completely prototype-based environment. As such,
it shares a lot of features and syntax with CLOS. The most notable of
these are multiple inheritance and multiple dispatch of methods.

@page
@node Installing Sheeple,  , About Sheeple, General Information
@section Installing Sheeple

@menu
* Supported Platforms::         In which systems and implementations does
                                Sheeple currently perform best?
* Loading Sheeple::             A quick guide to starting Sheeple
@end menu

@node Supported Platforms, Loading Sheeple, Installing Sheeple, Installing Sheeple
@subsection Supported Platforms
@cindex platforms, supported
@cindex supported platforms
Confirmed to work (pass all tests):

@enumerate
@item
SBCL
@cindex SBCL

@item
Clozure CL
@cindex Clozure CL
@cindex OpenMCL

@item
GNU CLISP
@cindex CLISP
@cindex GNU CLISP

@item
LispWorks (was tested a while ago -- will probably pass again)
@cindex LispWorks
@end enumerate

Sheeple doesn't use any OS-specific code (or threads), so it should be
fairly stable on all operating systems.  OSX and Linux x86 have both
been actually tested on the aforementioned platforms.  In theory, it
should work on any implementation that supports weap pointers and weak
hash tables with key weakness through trivial-garbage.  If you run the
test suite on a platform not listed above, and all tests pass, please
e-mail me and I'll add it to the list of supported platforms.

@node Loading Sheeple,  , Supported Platforms, Installing Sheeple
@subsection Loading Sheeple
@cindex loading
It's fairly effortless to get Sheeple working. To get started, simply

@lisp
(asdf:oos 'asdf:load-op 'sheeple)
(in-package sheeple-user)
@end lisp

And mess around from there. Be aware that if your implementation does
not include ASDF, you will have to acquire it and load it
yourself. Clisp, for example, will require this.  For information on
how to do this, check out Cliki, or the ASDF Homepage.

Sheeple should work on most Lisp implementations that support weak
pointers and hash tables with key weakness, although it's mainly
written and tested in SBCL and Clozure CL on Linux x86.

Sheeple also includes a suite of tests you can run on whatever
platform you're trying to get it to work on. The test suite depends on
Fiveam. To run it:

@lisp
(asdf:oos 'asdf:test-op 'sheeple)
@end lisp

And watch the tests scroll by. All tests should pass as long as you're
using a tagged release.

@node Concept Index, Copying, General Information, Top
@unnumbered Concept Index
@printindex cp

@node Copying,  , Concept Index, Top
@appendix Copying
@insertcopying

@bye
